{
  "files": [], // This is often empty when using project references
  "references": [
    { "path": "./tsconfig.app.json" },  // Handles your application source code (src)
    { "path": "./tsconfig.node.json" } // Handles Node.js specific files like vite.config.ts
  ],
  "compilerOptions": {
    // Path Aliasing (keep as you have it)
    "baseUrl": ".",
    "paths": {
      "@/*": ["./src/*"]
    },

    // Recommended for modern TypeScript projects
    "esModuleInterop": true, // Enables smoother interoperation between CommonJS and ES Modules
    "allowSyntheticDefaultImports": true, // Allows default imports from modules with no default export
    "forceConsistentCasingInFileNames": true, // Catches errors caused by inconsistent casing in file names
    "resolveJsonModule": true, // Allows importing .json files as modules

    // Strictness Flags (Generally recommended to be true for better type safety)
    // These might also be set (or overridden) in your tsconfig.app.json.
    // Consider enabling "strict": true in tsconfig.app.json, which includes these and more.
    "noImplicitAny": true, // Raise error on expressions and declarations with an implied 'any' type.
    "strictNullChecks": true, // In strict null checking mode, the null and undefined values are not in the domain of every type.
    "noUnusedLocals": true, // Report errors on unused local variables.
    "noUnusedParameters": true, // Report errors on unused parameters.

    // Your existing settings
    "skipLibCheck": true, // Skip type checking of all declaration files (*.d.ts).
    "allowJs": true // Allow JavaScript files to be compiled. Set to false if your project is pure TypeScript.
                    // If true, consider adding "checkJs": true to report errors in .js files too.
  }
}
